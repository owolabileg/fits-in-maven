package monitoredfits.rv;

import java.util.HashMap;

import codegen.ltl.structure.*;
import monitoredfits.fits.*;
import monitoredfits.assertion.Assertion;

public aspect Properties{static void setupVerification(){initialisetriggered2de80c();initialisecurrentLTL2de80c();initialisetriggered44bcfa();initialisecurrentLTL44bcfa();}

static HashMap<UserInfo,Boolean>triggered2de80c=new HashMap<UserInfo,Boolean>();static void initialisetriggered2de80c(){triggered2de80c=new HashMap<UserInfo,Boolean>();}

static HashMap<UserInfo,LTL>currentLTL2de80c=new HashMap<UserInfo,LTL>();static void initialisecurrentLTL2de80c(){currentLTL2de80c=new HashMap<UserInfo,LTL>();}

static HashMap<UserSession,Boolean>triggered44bcfa=new HashMap<UserSession,Boolean>();static void initialisetriggered44bcfa(){triggered44bcfa=new HashMap<UserSession,Boolean>();}

static HashMap<UserSession,LTL>currentLTL44bcfa=new HashMap<UserSession,LTL>();static void initialisecurrentLTL44bcfa(){currentLTL44bcfa=new HashMap<UserSession,LTL>();}

before(UserInfo u):call(*UserInfo.makeEnabled(..))&&target(u)&&!(adviceexecution())&&!cflow(adviceexecution())&&!cflowbelow(adviceexecution()){if(!triggered2de80c.computeIfAbsent(u,(k)->false)){currentLTL2de80c.put(u,currentLTL2de80c.computeIfAbsent(u,(k)->new And(new Until(new Not(new MatchEvent(new Event("before","UserInfo.withdrawFrom"))),new MatchEvent(new Event("before","UserInfo.makeEnabled"))),new Globally(new Implies(new MatchEvent(new Event("before","UserInfo.makeDisabled")),new Next(new Until(new Not(new MatchEvent(new Event("before","UserInfo.withdrawFrom"))),new MatchEvent(new Event("before","UserInfo.makeEnabled")))))))).derivative(new Event("before","UserInfo.makeEnabled")));triggered2de80c.put(u,true);}}

before(UserInfo u):call(*UserInfo.makeDisabled(..))&&target(u)&&!(adviceexecution())&&!cflow(adviceexecution())&&!cflowbelow(adviceexecution()){if(!triggered2de80c.computeIfAbsent(u,(k)->false)){currentLTL2de80c.put(u,currentLTL2de80c.computeIfAbsent(u,(k)->new And(new Until(new Not(new MatchEvent(new Event("before","UserInfo.withdrawFrom"))),new MatchEvent(new Event("before","UserInfo.makeEnabled"))),new Globally(new Implies(new MatchEvent(new Event("before","UserInfo.makeDisabled")),new Next(new Until(new Not(new MatchEvent(new Event("before","UserInfo.withdrawFrom"))),new MatchEvent(new Event("before","UserInfo.makeEnabled")))))))).derivative(new Event("before","UserInfo.makeDisabled")));triggered2de80c.put(u,true);}}

before(UserInfo u):call(*UserInfo.withdrawFrom(..))&&target(u)&&!(adviceexecution())&&!cflow(adviceexecution())&&!cflowbelow(adviceexecution()){if(!triggered2de80c.computeIfAbsent(u,(k)->false)){currentLTL2de80c.put(u,currentLTL2de80c.computeIfAbsent(u,(k)->new And(new Until(new Not(new MatchEvent(new Event("before","UserInfo.withdrawFrom"))),new MatchEvent(new Event("before","UserInfo.makeEnabled"))),new Globally(new Implies(new MatchEvent(new Event("before","UserInfo.makeDisabled")),new Next(new Until(new Not(new MatchEvent(new Event("before","UserInfo.withdrawFrom"))),new MatchEvent(new Event("before","UserInfo.makeEnabled")))))))).derivative(new Event("before","UserInfo.withdrawFrom")));triggered2de80c.put(u,true);}}

before(UserInfo u):call(*UserInfo.*(..))&&target(u)&&!(adviceexecution())&&!cflow(adviceexecution())&&!cflowbelow(adviceexecution()){if(!triggered2de80c.computeIfAbsent(u,(k)->false)){currentLTL2de80c.put(u,currentLTL2de80c.computeIfAbsent(u,(k)->new And(new Until(new Not(new MatchEvent(new Event("before","UserInfo.withdrawFrom"))),new MatchEvent(new Event("before","UserInfo.makeEnabled"))),new Globally(new Implies(new MatchEvent(new Event("before","UserInfo.makeDisabled")),new Next(new Until(new Not(new MatchEvent(new Event("before","UserInfo.withdrawFrom"))),new MatchEvent(new Event("before","UserInfo.makeEnabled")))))))).derivative(new Event("before","#")));triggered2de80c.put(u,true);}}

before(UserInfo u):call(*UserInfo.*(..))&&target(u)&&!(adviceexecution())&&!cflow(adviceexecution())&&!cflowbelow(adviceexecution()){if(currentLTL2de80c.computeIfAbsent(u,(k)->new And(new Until(new Not(new MatchEvent(new Event("before","UserInfo.withdrawFrom"))),new MatchEvent(new Event("before","UserInfo.makeEnabled"))),new Globally(new Implies(new MatchEvent(new Event("before","UserInfo.makeDisabled")),new Next(new Until(new Not(new MatchEvent(new Event("before","UserInfo.withdrawFrom"))),new MatchEvent(new Event("before","UserInfo.makeEnabled")))))))).cannotMatch()){Assertion.alert("Violation detected on foreach target (UserInfo u) property { GOOD ((not withdrawFrom until makeEnabled) and Globally ((makeDisabled implies next ((not withdrawFrom until makeEnabled)))))}");}triggered2de80c.put(u,false);}

before(UserSession u):call(*UserSession.openSession(..))&&target(u)&&!(adviceexecution())&&!cflow(adviceexecution())&&!cflowbelow(adviceexecution()){if(!triggered44bcfa.computeIfAbsent(u,(k)->false)){currentLTL44bcfa.put(u,currentLTL44bcfa.computeIfAbsent(u,(k)->new And(new Until(new Not(new MatchEvent(new Event("before","UserSession.log"))),new MatchEvent(new Event("before","UserSession.openSession"))),new Globally(new Implies(new MatchEvent(new Event("before","UserSession.closeSession")),new Next(new Until(new Not(new MatchEvent(new Event("before","UserSession.log"))),new MatchEvent(new Event("before","UserSession.openSession")))))))).derivative(new Event("before","UserSession.openSession")));triggered44bcfa.put(u,true);}}

before(UserSession u):call(*UserSession.log(..))&&target(u)&&!(adviceexecution())&&!cflow(adviceexecution())&&!cflowbelow(adviceexecution()){if(!triggered44bcfa.computeIfAbsent(u,(k)->false)){currentLTL44bcfa.put(u,currentLTL44bcfa.computeIfAbsent(u,(k)->new And(new Until(new Not(new MatchEvent(new Event("before","UserSession.log"))),new MatchEvent(new Event("before","UserSession.openSession"))),new Globally(new Implies(new MatchEvent(new Event("before","UserSession.closeSession")),new Next(new Until(new Not(new MatchEvent(new Event("before","UserSession.log"))),new MatchEvent(new Event("before","UserSession.openSession")))))))).derivative(new Event("before","UserSession.log")));triggered44bcfa.put(u,true);}}

before(UserSession u):call(*UserSession.closeSession(..))&&target(u)&&!(adviceexecution())&&!cflow(adviceexecution())&&!cflowbelow(adviceexecution()){if(!triggered44bcfa.computeIfAbsent(u,(k)->false)){currentLTL44bcfa.put(u,currentLTL44bcfa.computeIfAbsent(u,(k)->new And(new Until(new Not(new MatchEvent(new Event("before","UserSession.log"))),new MatchEvent(new Event("before","UserSession.openSession"))),new Globally(new Implies(new MatchEvent(new Event("before","UserSession.closeSession")),new Next(new Until(new Not(new MatchEvent(new Event("before","UserSession.log"))),new MatchEvent(new Event("before","UserSession.openSession")))))))).derivative(new Event("before","UserSession.closeSession")));triggered44bcfa.put(u,true);}}

before(UserSession u):call(*UserSession.*(..))&&target(u)&&!(adviceexecution())&&!cflow(adviceexecution())&&!cflowbelow(adviceexecution()){if(!triggered44bcfa.computeIfAbsent(u,(k)->false)){currentLTL44bcfa.put(u,currentLTL44bcfa.computeIfAbsent(u,(k)->new And(new Until(new Not(new MatchEvent(new Event("before","UserSession.log"))),new MatchEvent(new Event("before","UserSession.openSession"))),new Globally(new Implies(new MatchEvent(new Event("before","UserSession.closeSession")),new Next(new Until(new Not(new MatchEvent(new Event("before","UserSession.log"))),new MatchEvent(new Event("before","UserSession.openSession")))))))).derivative(new Event("before","#")));triggered44bcfa.put(u,true);}}

before(UserSession u):call(*UserSession.*(..))&&target(u)&&!(adviceexecution())&&!cflow(adviceexecution())&&!cflowbelow(adviceexecution()){if(currentLTL44bcfa.computeIfAbsent(u,(k)->new And(new Until(new Not(new MatchEvent(new Event("before","UserSession.log"))),new MatchEvent(new Event("before","UserSession.openSession"))),new Globally(new Implies(new MatchEvent(new Event("before","UserSession.closeSession")),new Next(new Until(new Not(new MatchEvent(new Event("before","UserSession.log"))),new MatchEvent(new Event("before","UserSession.openSession")))))))).cannotMatch()){Assertion.alert("Violation detected on foreach target (UserSession u) property { GOOD ((not log until openSession) and Globally ((closeSession implies next ((not log until openSession)))))}");}triggered44bcfa.put(u,false);}

before():call(*UserInfo.openSession(..))&&!(adviceexecution())&&!cflow(adviceexecution())&&!cflowbelow(adviceexecution()){if(!Verification.triggerede53b93){Verification.currentLTLe53b93=Verification.currentLTLe53b93.derivative(new Event("before","UserInfo.openSession"));Verification.triggerede53b93=true;}}

before():call(**.*(..))&&!(adviceexecution())&&!cflow(adviceexecution())&&!cflowbelow(adviceexecution()){if(Verification.initialised){if(!Verification.triggerede53b93){Verification.currentLTLe53b93=Verification.currentLTLe53b93.derivative(new Event("before","#"));Verification.triggerede53b93=true;}if(Verification.currentLTLe53b93.cannotMatch()){Assertion.alert("Violation detected on property { GOOD (not openSession until initialise)}");}Verification.triggerede53b93=false;}}

after(UserInfo u):call(*UserInfo.*(..))&&target(u)&&!(adviceexecution())&&!cflow(adviceexecution())&&!cflowbelow(adviceexecution()){if(!triggered2de80c.computeIfAbsent(u,(k)->false)){currentLTL2de80c.put(u,currentLTL2de80c.computeIfAbsent(u,(k)->new And(new Until(new Not(new MatchEvent(new Event("before","UserInfo.withdrawFrom"))),new MatchEvent(new Event("before","UserInfo.makeEnabled"))),new Globally(new Implies(new MatchEvent(new Event("before","UserInfo.makeDisabled")),new Next(new Until(new Not(new MatchEvent(new Event("before","UserInfo.withdrawFrom"))),new MatchEvent(new Event("before","UserInfo.makeEnabled")))))))).derivative(new Event("after","#")));triggered2de80c.put(u,true);}}

after(UserInfo u):call(*UserInfo.*(..))&&target(u)&&!(adviceexecution())&&!cflow(adviceexecution())&&!cflowbelow(adviceexecution()){if(currentLTL2de80c.computeIfAbsent(u,(k)->new And(new Until(new Not(new MatchEvent(new Event("before","UserInfo.withdrawFrom"))),new MatchEvent(new Event("before","UserInfo.makeEnabled"))),new Globally(new Implies(new MatchEvent(new Event("before","UserInfo.makeDisabled")),new Next(new Until(new Not(new MatchEvent(new Event("before","UserInfo.withdrawFrom"))),new MatchEvent(new Event("before","UserInfo.makeEnabled")))))))).cannotMatch()){Assertion.alert("Violation detected on foreach target (UserInfo u) property { GOOD ((not withdrawFrom until makeEnabled) and Globally ((makeDisabled implies next ((not withdrawFrom until makeEnabled)))))}");}triggered2de80c.put(u,false);}

after(UserSession u):call(*UserSession.*(..))&&target(u)&&!(adviceexecution())&&!cflow(adviceexecution())&&!cflowbelow(adviceexecution()){if(!triggered44bcfa.computeIfAbsent(u,(k)->false)){currentLTL44bcfa.put(u,currentLTL44bcfa.computeIfAbsent(u,(k)->new And(new Until(new Not(new MatchEvent(new Event("before","UserSession.log"))),new MatchEvent(new Event("before","UserSession.openSession"))),new Globally(new Implies(new MatchEvent(new Event("before","UserSession.closeSession")),new Next(new Until(new Not(new MatchEvent(new Event("before","UserSession.log"))),new MatchEvent(new Event("before","UserSession.openSession")))))))).derivative(new Event("after","#")));triggered44bcfa.put(u,true);}}

after(UserSession u):call(*UserSession.*(..))&&target(u)&&!(adviceexecution())&&!cflow(adviceexecution())&&!cflowbelow(adviceexecution()){if(currentLTL44bcfa.computeIfAbsent(u,(k)->new And(new Until(new Not(new MatchEvent(new Event("before","UserSession.log"))),new MatchEvent(new Event("before","UserSession.openSession"))),new Globally(new Implies(new MatchEvent(new Event("before","UserSession.closeSession")),new Next(new Until(new Not(new MatchEvent(new Event("before","UserSession.log"))),new MatchEvent(new Event("before","UserSession.openSession")))))))).cannotMatch()){Assertion.alert("Violation detected on foreach target (UserSession u) property { GOOD ((not log until openSession) and Globally ((closeSession implies next ((not log until openSession)))))}");}triggered44bcfa.put(u,false);}

after():call(*BackEnd.initialise(..))&&!(adviceexecution())&&!cflow(adviceexecution())&&!cflowbelow(adviceexecution()){if(!Verification.triggerede53b93){Verification.currentLTLe53b93=Verification.currentLTLe53b93.derivative(new Event("after","BackEnd.initialise"));Verification.triggerede53b93=true;}}

after():call(**.*(..))&&!(adviceexecution())&&!cflow(adviceexecution())&&!cflowbelow(adviceexecution()){if(Verification.initialised){if(!Verification.triggerede53b93){Verification.currentLTLe53b93=Verification.currentLTLe53b93.derivative(new Event("after","#"));Verification.triggerede53b93=true;}if(Verification.currentLTLe53b93.cannotMatch()){Assertion.alert("Violation detected on property { GOOD (not openSession until initialise)}");}Verification.triggerede53b93=false;}}

}